(()=>{"use strict";const t=(t,n=null,s=null)=>{let o=[];return{title:t,color:n,icon:s,uid:e(),addTask:function(t){const n=e(o);t.uid=n,o.push(t)},getTasks:function(){return o},removeTask:function(t){const e=o.findIndex((e=>e.uid===t));console.log({index:e}),e>=0&&o.splice(e,1)}}};function e(t){let n="i";if(n+=function(t){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let n="";for(let t=0;t<6;t++)n+=e[(61*Math.random()).toFixed()];return n}(),o=n,!(s=t)||s.every((t=>t.id!==o)))return n;var s,o;e(t)}const n=(t,e="",n,s=0)=>{const o=function(){let t=[];return{getComments:function(){return t},addComment:function(e){t.push(e)}}}(),a=function(){let t=null;return{setDueDate:function(e){const n=new Date(e);!function(t){return!isNaN(t)}(n)?console.warn("Date not set: Invalid date"):t=n},getDueDate:function(){return t}}}();return a.setDueDate(n),Object.assign({title:t,description:e,isDone:!1,priority:s},o,a)};function s(t){if(!t.hasOwnProperty("type"))return;const e=document.createElement(t.type);for(const n in t)"type"!==n&&Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}const o=s({type:"div",classList:["new-folder card"]});o.append(function(t){const e=document.createElement("ion-icon");return e.classList.add("md","hydrated"),e.setAttribute("role","img"),e.setAttribute("name",t),e}("add-outline"),s({type:"span",textContent:"New Folder",classList:["subtitle"]}));const a=s({type:"header"});a.append(s({type:"img",src:"https://img.logoipsum.com/246.svg"}),s({type:"span",textContent:"TO DEW"}));const i=s({type:"nav"});i.append(s({type:"span",textContent:"My Folders"}));let c=s({type:"main"});function r(t){c.replaceWith(t),c=t}function d(t,e=""){if(e)return e.substring(0,t-3)+"..."}document.body.append(a,i,c);const u=n("Task 1"),l=n("Task 2","This is a very long text that resembles a description"),p=t("Example 1"),f=t("Example 2");p.addTask(u),p.addTask(l);let m=[p,f];const y=document.querySelector("nav"),h=function(t){const e=s({type:"main"});return e.classList.add("dashboard"),e.append(o),t?(t.forEach((t=>{const n=function(t){const e=s({type:"div",classList:["folder card"]});e.dataset.uid=t.uid;let n=t.getTasks().length;return e.append(s({type:"h3",textContent:t.title,classList:["title"]}),s({type:"span",classList:["subtitle"],textContent:(o=n,`${o} ${1===o?"task":"tasks"}`)})),e;var o}(t);e.append(n)})),e):e}([p,f]);r(h),document.querySelectorAll(".folder").forEach((t=>{t.addEventListener("click",(()=>{var e;!function(t){const e=document.createElement("span");e.textContent=t.title,e.dataset.uid=t.uid,y.append(e);const n=function(t){const e=document.createElement("main"),n=function(t){const e=document.createElement("section");return e.id="task-list",t.forEach((t=>{const n=function(t){const e=document.createElement("div");return e.classList.add("card"),e.append(s({type:"h3",classList:["title"],textContent:t.title}),s({type:"span",classList:["subtitle"],textContent:d(50,t.description)})),e}(t);e.append(n)})),e}(t.getTasks());return e.append(n),e}(t);r(n)}((e=t.dataset.uid,m.find((t=>t.uid===e))))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,