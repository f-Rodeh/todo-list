(()=>{"use strict";function e(t){let n="i";if(n+=function(e){const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let n="";for(let e=0;e<6;e++)n+=t[(61*Math.random()).toFixed()];return n}(),o=n,t.every((e=>e.id!==o)))return n;var o;e(t)}const t=(e,t="",n,o=0)=>{const s=function(){let e=[];return{getComments:function(){return e},addComment:function(t){e.push(t)}}}(),a=function(){let e=null;return{setDueDate:function(t){const n=new Date(t);!function(e){return!isNaN(e)}(n)?console.error("Date not set: Invalid date"):e=n},getDueDate:function(){return e}}}();return a.setDueDate(n),Object.assign({title:e,description:t,isDone:!1,priority:o},s,a)},n=t("Task","This is an example task","2023-09-09"),o=t("Task 2","This is another example task","2023-12-09"),s=t("Task 3","Yet another example task","2023-12-25"),a=((t,n=null,o=null)=>{let s=[];return{title:"Folder",color:n,icon:o,addTask:function(t){const n=e(s);t.uid=n,s.push(t)},getTasks:function(){return s},removeTask:function(e){const t=s.findIndex((t=>t.uid===e));console.log({index:t}),t>=0&&s.splice(t,1)}}})();a.addTask(n),a.addTask(o),a.addTask(s),console.log("example folder: ",a),console.log("example tasks: ",a.getTasks()),a.removeTask(o.uid),console.log("tasks after deletion: ",a.getTasks())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBcUNBLFNBQVNBLEVBQWFDLEdBQ3BCLElBQUlDLEVBQVMsSUFHYixHQUZBQSxHQVNGLFNBQXVCQyxHQUNyQixNQUFNQyxFQUFhLGlFQUNuQixJQUFJRixFQUFTLEdBRWIsSUFBSyxJQUFJRyxFQUFJLEVBQUdBLEVBYk0sRUFhTUEsSUFHMUJILEdBQVVFLEdBRnFCLEdBQWhCRSxLQUFLQyxVQUNDQyxXQUl2QixPQUFPTixDQUNULENBcEJXTyxHQU5vQkMsRUFRRlIsRUFBVEQsRUFQTFUsT0FBT0MsR0FBU0EsRUFBS0YsS0FBT0EsSUFRdkMsT0FBT1IsRUFUWCxJQUErQlEsRUFXM0JWLEVBQWFDLEVBRWpCLENDNUNBLE1BQU1ZLEVBQU8sQ0FBRUMsRUFBT0MsRUFBYyxHQUFJQyxFQUFTQyxFQUFXLEtBRTFELE1BQU1DLEVBaUJSLFdBQ0UsSUFBSUMsRUFBVyxHQVVmLE1BQU8sQ0FDTEMsWUFURixXQUNFLE9BQU9ELENBQ1QsRUFRRUUsV0FORixTQUFxQkMsR0FDbkJILEVBQVNJLEtBQU1ELEVBQ2pCLEVBTUYsQ0FoQ3lCRSxHQUNqQkMsRUFpQ1IsV0FDRSxJQUFJVCxFQUFVLEtBa0JkLE1BQU8sQ0FDTFUsV0FqQkYsU0FBcUJDLEdBQ25CLE1BQU1DLEVBQVUsSUFBSUMsS0FBTUYsSUFXNUIsU0FBc0JBLEdBQ3BCLE9BQVFHLE1BQU9ILEVBQ2pCLENBWE1JLENBQVlILEdBRVRJLFFBQVFDLE1BQU0sOEJBRG5CakIsRUFBVVksQ0FFZCxFQVlFTSxXQVZGLFdBQ0UsT0FBT2xCLENBQ1QsRUFVRixDQXhEc0JtQixHQUtwQixPQUpBVixFQUFZQyxXQUFZVixHQUlqQm9CLE9BQU9DLE9BQU8sQ0FDbkJ2QixRQUNBQyxjQUNBdUIsUUFMVyxFQU1YckIsWUFFQUMsRUFDQU8sRUFDRixFQ2ZJYyxFQUFjMUIsRUFBSyxPQUFRLDBCQUEyQixjQUN0RDJCLEVBQWUzQixFQUFLLFNBQVUsK0JBQWdDLGNBQzlENEIsRUFBZTVCLEVBQUssU0FBVSwyQkFBNEIsY0FDMUQ2QixFRkpTLEVBQUM1QixFQUFPNkIsRUFBUSxLQUFNQyxFQUFPLFFBRTFDLElBQUlDLEVBQVEsR0FtQlosTUFBTyxDQUNML0IsTUVsQnlCLFNGbUJ6QjZCLFFBQ0FDLE9BQ0FFLFFBckJGLFNBQWlCbEMsR0FDZixNQUFNbUMsRUFBTS9DLEVBQWE2QyxHQUN6QmpDLEVBQUttQyxJQUFNQSxFQUNYRixFQUFNdEIsS0FBS1gsRUFDYixFQWtCRW9DLFNBVEYsV0FDRSxPQUFPSCxDQUNULEVBUUVJLFdBakJGLFNBQXFCQyxHQUNuQixNQUNNQyxFQUFRTixFQUFNTyxXQURGeEMsR0FBVUEsRUFBS21DLE1BQVFHLElBRXpDbEIsUUFBUXFCLElBQUksQ0FBQ0YsVUFDVEEsR0FBUyxHQUFHTixFQUFNUyxPQUFPSCxFQUFPLEVBQ3RDLEVBYUEsRUV4Qm9CSSxHQUN0QmIsRUFBY0ksUUFBUVAsR0FDdEJHLEVBQWNJLFFBQVFOLEdBQ3RCRSxFQUFjSSxRQUFRTCxHQUV0QlQsUUFBUXFCLElBQUssbUJBQW9CWCxHQUNqQ1YsUUFBUXFCLElBQUssa0JBQW1CWCxFQUFjTSxZQUU5Q04sRUFBY08sV0FBV1QsRUFBYU8sS0FDdENmLFFBQVFxQixJQUFLLHlCQUEwQlgsRUFBY00sVyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9sb2dpYy9mb2xkZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2xvZ2ljL3Rhc2suanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEZvbGRlciB9XG5cbmNvbnN0IEZvbGRlciA9ICh0aXRsZSwgY29sb3IgPSBudWxsLCBpY29uID0gbnVsbCkgPT4ge1xuXG4gIGxldCB0YXNrcyA9IFtdXG5cbiAgZnVuY3Rpb24gYWRkVGFzayh0YXNrKSB7XG4gICAgY29uc3QgdWlkID0gZ2VuZXJhdGVVaWQoIHRhc2tzICk7XG4gICAgdGFzay51aWQgPSB1aWQ7XG4gICAgdGFza3MucHVzaCh0YXNrKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZVRhc2soIHRhc2tVaWQgKXtcbiAgICBjb25zdCBpc1RhcmdldCA9ICh0YXNrKSA9PiAgdGFzay51aWQgPT09IHRhc2tVaWQ7XG4gICAgY29uc3QgaW5kZXggPSB0YXNrcy5maW5kSW5kZXgoIGlzVGFyZ2V0IClcbiAgICBjb25zb2xlLmxvZyh7aW5kZXh9KVxuICAgIGlmIChpbmRleCA+PSAwKSB0YXNrcy5zcGxpY2UoaW5kZXgsIDEpXG4gIH1cblxuICBmdW5jdGlvbiBnZXRUYXNrcygpe1xuICAgIHJldHVybiB0YXNrc1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0aXRsZSxcbiAgICBjb2xvcixcbiAgICBpY29uLFxuICAgIGFkZFRhc2ssXG4gICAgZ2V0VGFza3MsXG4gICAgcmVtb3ZlVGFza1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzSWRBdmFpbGFibGUoIGFycmF5LCBpZCApe1xuICByZXR1cm4gYXJyYXkuZXZlcnkoKHRhc2spID0+IHRhc2suaWQgIT09IGlkICk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlVWlkKCBpZEFycmF5ICl7XG4gIGxldCBvdXRwdXQgPSAnaSdcbiAgb3V0cHV0Kz0gcmFuZG9tU3RyaW5nKDYpO1xuXG4gIGlmKCBpc0lkQXZhaWxhYmxlKGlkQXJyYXksIG91dHB1dCkgKXtcbiAgICByZXR1cm4gb3V0cHV0XG4gIH0gZWxzZSB7XG4gICAgZ2VuZXJhdGVVaWQoIGlkQXJyYXkgKVxuICB9XG59XG5cbmZ1bmN0aW9uIHJhbmRvbVN0cmluZyggbGVuZ3RoICl7XG4gIGNvbnN0IGNoYXJhY3RlcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuICBsZXQgb3V0cHV0ID0gJyc7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCkgKiAoY2hhcmFjdGVycy5sZW5ndGgtMSkgO1xuICAgIGNvbnN0IGluZGV4ID0gcmFuZG9tLnRvRml4ZWQoKTtcbiAgICBvdXRwdXQgKz0gY2hhcmFjdGVyc1tpbmRleF1cbiAgfVxuXG4gIHJldHVybiBvdXRwdXRcbn0iLCJleHBvcnQgeyBUYXNrIH0gXG5cbmNvbnN0IFRhc2sgPSAoIHRpdGxlLCBkZXNjcmlwdGlvbiA9ICcnLCBkdWVEYXRlLCBwcmlvcml0eSA9IDAgKSA9PiB7XG5cbiAgY29uc3QgY29tbWVudE1hbmFnZXIgPSBDb21tZW50TWFuYWdlcigpXG4gIGNvbnN0IGRhdGVNYW5hZ2VyID0gRGF0ZU1hbmFnZXIoKVxuICBkYXRlTWFuYWdlci5zZXREdWVEYXRlKCBkdWVEYXRlIClcblxuICBsZXQgaXNEb25lID0gZmFsc2U7XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe1xuICAgIHRpdGxlLFxuICAgIGRlc2NyaXB0aW9uLFxuICAgIGlzRG9uZSxcbiAgICBwcmlvcml0eVxuICAgIH0sXG4gICAgY29tbWVudE1hbmFnZXIsXG4gICAgZGF0ZU1hbmFnZXJcbiAgKVxufVxuXG5mdW5jdGlvbiBDb21tZW50TWFuYWdlcigpIHtcbiAgbGV0IGNvbW1lbnRzID0gW107XG5cbiAgZnVuY3Rpb24gZ2V0Q29tbWVudHMoKXtcbiAgICByZXR1cm4gY29tbWVudHNcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZENvbW1lbnQoIGNvbW1lbnQgKXtcbiAgICBjb21tZW50cy5wdXNoKCBjb21tZW50IClcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZ2V0Q29tbWVudHMsXG4gICAgYWRkQ29tbWVudFxuICB9XG59XG5cbmZ1bmN0aW9uIERhdGVNYW5hZ2VyKCl7XG4gIGxldCBkdWVEYXRlID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXREdWVEYXRlKCBpbnB1dCApe1xuICAgIGNvbnN0IG5ld0RhdGUgPSBuZXcgRGF0ZSggaW5wdXQgKTtcblxuICAgIGlmKCBkYXRlSXNWYWxpZChuZXdEYXRlKSApIHtcbiAgICAgIGR1ZURhdGUgPSBuZXdEYXRlXG4gICAgfSBlbHNlIGNvbnNvbGUuZXJyb3IoJ0RhdGUgbm90IHNldDogSW52YWxpZCBkYXRlJyk7XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIGdldER1ZURhdGUoKXtcbiAgICByZXR1cm4gZHVlRGF0ZVxuICB9XG5cbiAgZnVuY3Rpb24gZGF0ZUlzVmFsaWQoIGlucHV0ICl7XG4gICAgcmV0dXJuICFpc05hTiggaW5wdXQgKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0RHVlRGF0ZSxcbiAgICBnZXREdWVEYXRlXG4gIH1cbn0iLCJpbXBvcnQgeyBGb2xkZXIgfSBmcm9tIFwiLi9sb2dpYy9mb2xkZXJcIjtcbmltcG9ydCB7IFRhc2sgfSBmcm9tIFwiLi9sb2dpYy90YXNrXCI7XG5cbmNvbnN0IGV4YW1wbGVUYXNrID0gVGFzaygnVGFzaycsICdUaGlzIGlzIGFuIGV4YW1wbGUgdGFzaycsICcyMDIzLTA5LTA5Jyk7XG5jb25zdCBleGFtcGxlVGFzazIgPSBUYXNrKCdUYXNrIDInLCAnVGhpcyBpcyBhbm90aGVyIGV4YW1wbGUgdGFzaycsICcyMDIzLTEyLTA5Jyk7XG5jb25zdCBleGFtcGxlVGFzazMgPSBUYXNrKCdUYXNrIDMnLCAnWWV0IGFub3RoZXIgZXhhbXBsZSB0YXNrJywgJzIwMjMtMTItMjUnKTtcbmNvbnN0IGV4YW1wbGVGb2xkZXIgPSBGb2xkZXIoJ0ZvbGRlcicpO1xuZXhhbXBsZUZvbGRlci5hZGRUYXNrKGV4YW1wbGVUYXNrKVxuZXhhbXBsZUZvbGRlci5hZGRUYXNrKGV4YW1wbGVUYXNrMilcbmV4YW1wbGVGb2xkZXIuYWRkVGFzayhleGFtcGxlVGFzazMpXG5cbmNvbnNvbGUubG9nKCAnZXhhbXBsZSBmb2xkZXI6ICcsIGV4YW1wbGVGb2xkZXIgKVxuY29uc29sZS5sb2coICdleGFtcGxlIHRhc2tzOiAnLCBleGFtcGxlRm9sZGVyLmdldFRhc2tzKCkgKVxuXG5leGFtcGxlRm9sZGVyLnJlbW92ZVRhc2soZXhhbXBsZVRhc2syLnVpZClcbmNvbnNvbGUubG9nKCAndGFza3MgYWZ0ZXIgZGVsZXRpb246ICcsIGV4YW1wbGVGb2xkZXIuZ2V0VGFza3MoKSApXG4iXSwibmFtZXMiOlsiZ2VuZXJhdGVVaWQiLCJpZEFycmF5Iiwib3V0cHV0IiwibGVuZ3RoIiwiY2hhcmFjdGVycyIsImkiLCJNYXRoIiwicmFuZG9tIiwidG9GaXhlZCIsInJhbmRvbVN0cmluZyIsImlkIiwiZXZlcnkiLCJ0YXNrIiwiVGFzayIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJjb21tZW50TWFuYWdlciIsImNvbW1lbnRzIiwiZ2V0Q29tbWVudHMiLCJhZGRDb21tZW50IiwiY29tbWVudCIsInB1c2giLCJDb21tZW50TWFuYWdlciIsImRhdGVNYW5hZ2VyIiwic2V0RHVlRGF0ZSIsImlucHV0IiwibmV3RGF0ZSIsIkRhdGUiLCJpc05hTiIsImRhdGVJc1ZhbGlkIiwiY29uc29sZSIsImVycm9yIiwiZ2V0RHVlRGF0ZSIsIkRhdGVNYW5hZ2VyIiwiT2JqZWN0IiwiYXNzaWduIiwiaXNEb25lIiwiZXhhbXBsZVRhc2siLCJleGFtcGxlVGFzazIiLCJleGFtcGxlVGFzazMiLCJleGFtcGxlRm9sZGVyIiwiY29sb3IiLCJpY29uIiwidGFza3MiLCJhZGRUYXNrIiwidWlkIiwiZ2V0VGFza3MiLCJyZW1vdmVUYXNrIiwidGFza1VpZCIsImluZGV4IiwiZmluZEluZGV4IiwibG9nIiwic3BsaWNlIiwiRm9sZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==